{"metadata":"{\"defaultCompiler\":{\"version\":\"0.8.20\"},\"sources\":{\"contracts/AlgebraVaultFactoryStub.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity =0.8.20;\\r\\npragma abicoder v1;\\r\\n\\r\\nimport './interfaces/vault/IAlgebraVaultFactory.sol';\\r\\n\\r\\n/// @title Algebra vault factory stub\\r\\n/// @notice This contract is used to set AlgebraCommunityVault as communityVault in new pools\\r\\ncontract AlgebraVaultFactoryStub is IAlgebraVaultFactory {\\r\\n  /// @notice the address of AlgebraCommunityVault\\r\\n  address public immutable defaultAlgebraCommunityVault;\\r\\n\\r\\n  constructor(address _algebraCommunityVault) {\\r\\n    require(_algebraCommunityVault != address(0));\\r\\n    defaultAlgebraCommunityVault = _algebraCommunityVault;\\r\\n  }\\r\\n\\r\\n  /// @inheritdoc IAlgebraVaultFactory\\r\\n  function getVaultForPool(address) external view override returns (address) {\\r\\n    return defaultAlgebraCommunityVault;\\r\\n  }\\r\\n\\r\\n  /// @inheritdoc IAlgebraVaultFactory\\r\\n  function createVaultForPool(address) external view override returns (address) {\\r\\n    return defaultAlgebraCommunityVault;\\r\\n  }\\r\\n}\\r\\n\",\"versionPragma\":\"=0.8.20\"},\"contracts/interfaces/vault/IAlgebraVaultFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\n/// @title The interface for the Algebra Vault Factory\\r\\n/// @notice This contract can be used for automatic vaults creation\\r\\n/// @dev Version: Algebra Integral\\r\\ninterface IAlgebraVaultFactory {\\r\\n  /// @notice returns address of the community fee vault for the pool\\r\\n  /// @param pool the address of Algebra Integral pool\\r\\n  /// @return communityFeeVault the address of community fee vault\\r\\n  function getVaultForPool(address pool) external view returns (address communityFeeVault);\\r\\n\\r\\n  /// @notice creates the community fee vault for the pool if needed\\r\\n  /// @param pool the address of Algebra Integral pool\\r\\n  /// @return communityFeeVault the address of community fee vault\\r\\n  function createVaultForPool(address pool) external returns (address communityFeeVault);\\r\\n}\\r\\n\",\"versionPragma\":\">=0.5.0\"}}}","address":"0x85559Bb19Eb4835BCDbD0B114aE39e0F5dDD70dd","bytecode":"0x60a060405234801561001057600080fd5b5060405161014a38038061014a8339818101604052602081101561003357600080fd5b50516001600160a01b03811661004857600080fd5b6001600160a01b031660805260805160d8610072600039600081816058015260a9015260d86000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80637570e389146041578063b7a854521460a5578063cbc48015146041575b600080fd5b607c60048036036020811015605557600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b607c7f00000000000000000000000000000000000000000000000000000000000000008156fea164736f6c6343000814000a","deployedBytecode":"0x6080604052348015600f57600080fd5b5060043610603c5760003560e01c80637570e389146041578063b7a854521460a5578063cbc48015146041575b600080fd5b607c60048036036020811015605557600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b607c7f00000000000000000000000000000000000000000000000000000000000000008156fea164736f6c6343000814000a","abi":[{"inputs":[{"internalType":"address","name":"_algebraCommunityVault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"createVaultForPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultAlgebraCommunityVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getVaultForPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]}